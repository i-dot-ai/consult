name: Build and test

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      DOCKER_IMAGE: consultation-analyser
    outputs:
      IMAGE_TAG: ${{ env.IMAGE_TAG }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set docker image tag
        run: |
          echo "IMAGE_TAG=${{ github.sha }}" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker Image
        uses: docker/build-push-action@v5
        with:
          tags: |
            ${{ env.DOCKER_IMAGE }}:${{ env.IMAGE_TAG }}
          push: false

  test:
    runs-on: ubuntu-latest
    needs: [build]
    outputs:
      IMAGE_TAG: ${{ needs.build.outputs.IMAGE_TAG }}
    env:
      DOCKER_IMAGE: consultation-analyser
      DATABASE_URL: psql://pguser:pgpass@postgres:5432/consultations_test

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: pguser
          POSTGRES_PASSWORD: pgpass
          POSTGRES_DB: consultations_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    container:
      image: consultation-analyser:${{ needs.build.outputs.IMAGE_TAG }}

    steps:
      - uses: actions/checkout@v4

      # - name: Check migrations
      #   run: |
      #     poetry run python manage.py migrate
      #     poetry run python manage.py makemigrations --check
      #   env:
      #     DJANGO_SECRET_KEY: dummy-key
      #     DATABASE_URL: ${{ env.DATABASE_URL }}

      - name: pytest
        run:
          docker run -e DATABASE_URL=$DATABASE_URL ./venv/bin/pytest
        env:
          DATABASE_URL: ${{ env.DATABASE_URL }}


