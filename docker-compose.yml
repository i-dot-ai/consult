
services:
  # PostgreSQL Database
  postgres:
    image: pgvector/pgvector:0.8.0-pg17-bookworm
    environment:
      POSTGRES_DB: consultation_analyser
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres  # pragma: allowlist secret
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Django Backend
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DEBUG=True
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/consultation_analyser
      - SECRET_KEY=dev-secret-key-change-in-production
      - ALLOWED_HOSTS=localhost,127.0.0.1,backend,frontend
      - DOMAIN_NAME=
      - SENTRY_DSN=
      - EXECUTION_CONTEXT=
      - GIT_SHA=
      - APP_BUCKET=
      - ADMIN_USERS=email@example.com
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
    command: sh -c "venv/bin/python manage.py migrate && venv/bin/python manage.py runserver 0.0.0.0:8000"

  # Frontend
  frontend:
    image: node:18
    working_dir: /app
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - BACKEND_URL=http://backend:8000
    volumes:
      - ./frontend:/app
    depends_on:
      - backend
    command: sh -c "npm install && npm run dev"

volumes:
  postgres_data:
  frontend_node_modules:
