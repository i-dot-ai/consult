# Generated by Django 5.2.2 on 2025-06-11 12:32

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("consultations", "0050_alter_questionold_consultation_and_more"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Consultation",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(max_length=256)),
                ("slug", models.SlugField(max_length=256, unique=True)),
                ("users", models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
            options={
                "ordering": ["created_at"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Question",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                ("text", models.TextField()),
                ("slug", models.SlugField(max_length=256)),
                ("number", models.IntegerField()),
                ("has_free_text", models.BooleanField(default=True)),
                ("has_multiple_choice", models.BooleanField(default=False)),
                ("multiple_choice_options", models.JSONField(blank=True, null=True)),
                (
                    "consultation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="consultations.consultation",
                    ),
                ),
            ],
            options={
                "ordering": ["number"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Respondent",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                ("themefinder_id", models.IntegerField(blank=True, null=True)),
                ("demographics", models.JSONField(default=dict)),
                (
                    "consultation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="consultations.consultation",
                    ),
                ),
            ],
            options={
                "ordering": ["created_at"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Response",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                ("free_text", models.TextField(blank=True)),
                ("chosen_options", models.JSONField(default=list)),
                (
                    "question",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="consultations.question",
                    ),
                ),
                (
                    "respondent",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="consultations.respondent",
                    ),
                ),
            ],
            options={
                "ordering": ["created_at"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Theme",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=256)),
                ("description", models.TextField()),
                ("key", models.CharField(blank=True, max_length=128, null=True)),
                (
                    "question",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="consultations.question",
                    ),
                ),
            ],
            options={
                "ordering": ["created_at"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ResponseAnnotation",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                (
                    "sentiment",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("AGREEMENT", "Agreement"),
                            ("DISAGREEMENT", "Disagreement"),
                            ("UNCLEAR", "Unclear"),
                        ],
                        max_length=12,
                        null=True,
                    ),
                ),
                (
                    "evidence_rich",
                    models.CharField(
                        blank=True,
                        choices=[("YES", "Yes"), ("NO", "No")],
                        max_length=3,
                        null=True,
                    ),
                ),
                ("human_reviewed", models.BooleanField(default=False)),
                ("reviewed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "response",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="annotation",
                        to="consultations.response",
                    ),
                ),
                (
                    "reviewed_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "themes",
                    models.ManyToManyField(blank=True, to="consultations.theme"),
                ),
            ],
            options={
                "ordering": ["created_at"],
                "abstract": False,
            },
        ),
        migrations.AddConstraint(
            model_name="consultation",
            constraint=models.UniqueConstraint(
                fields=("slug",), name="unique_consultation_slug"
            ),
        ),
        migrations.AddIndex(
            model_name="question",
            index=models.Index(
                fields=["consultation", "has_free_text"],
                name="consultatio_consult_c41e0a_idx",
            ),
        ),
        migrations.AddConstraint(
            model_name="question",
            constraint=models.UniqueConstraint(
                fields=("consultation", "slug"), name="unique_question_slug"
            ),
        ),
        migrations.AddConstraint(
            model_name="question",
            constraint=models.UniqueConstraint(
                fields=("consultation", "number"), name="unique_question_number"
            ),
        ),
        migrations.AddIndex(
            model_name="respondent",
            index=models.Index(
                fields=["consultation", "themefinder_id"],
                name="consultatio_consult_c3b1e3_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="response",
            index=models.Index(
                fields=["question"], name="consultatio_questio_481645_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="response",
            index=models.Index(
                fields=["free_text"], name="consultatio_free_te_47c4fc_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="response",
            index=models.Index(
                fields=["respondent", "question"], name="consultatio_respond_97bc2e_idx"
            ),
        ),
        migrations.AddConstraint(
            model_name="response",
            constraint=models.UniqueConstraint(
                fields=("respondent", "question"), name="unique_question_response"
            ),
        ),
        migrations.AddIndex(
            model_name="theme",
            index=models.Index(
                fields=["question"], name="consultatio_questio_e016ff_idx"
            ),
        ),
        migrations.AddConstraint(
            model_name="theme",
            constraint=models.UniqueConstraint(
                condition=models.Q(("key__isnull", False)),
                fields=("question", "key"),
                name="unique_theme",
            ),
        ),
        migrations.AddIndex(
            model_name="responseannotation",
            index=models.Index(
                fields=["human_reviewed"], name="consultatio_human_r_7f8c1d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="responseannotation",
            index=models.Index(
                fields=["sentiment"], name="consultatio_sentime_323d6b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="responseannotation",
            index=models.Index(
                fields=["evidence_rich"], name="consultatio_evidenc_43c687_idx"
            ),
        ),
    ]
